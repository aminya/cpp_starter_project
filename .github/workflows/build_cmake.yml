name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    # Install Conan
    - name: Install conan Ubuntu
      if: startsWith(matrix.os,'ubuntu')
      shell: bash
      run: |
        python3 -m pip install --upgrade pip setuptools
        python3 -m pip install conan
        # We need to source the profile file to make sure conan is in PATH
        source ~/.profile
        sudo update-alternatives --install /usr/bin/conan conan /home/runner/.local/bin/conan 10
        sudo update-alternatives --config conan
        conan -v

    - name: Install conan Windows
      if: startsWith(matrix.os,'windows')
      shell: pwsh
      run: |
        choco install conan -y
        [Environment]::SetEnvironmentVariable("Path", $env:Path + ";" + "C:/Program Files/Conan/conan", "User")
        refreshenv
        echo "::add-path::C:/Program Files/Conan/conan/conan.exe"
        conan -v

    - name: Install conan macOS
      if: startsWith(matrix.os,'macOS')
      run: |
        brew install conan
        conan -v

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      # 
      # We need to source the profile file to make sure conan is in PATH
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE